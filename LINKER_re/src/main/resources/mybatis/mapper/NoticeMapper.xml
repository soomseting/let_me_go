<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 안에 들어가는 내용물은 mapper 태그 안에 작성 -->
<!-- namespace에는 구현 인터페이스의 풀패키지명을 포함한 이름이 들어감 -->
<mapper namespace="com.myweb.board.model.NoticeMapper">
	<!-- id는 인터페이스의 함수명이 들어감 세미콜론은 적지 않습니다. = 지금은 NoticeBoard.java 파일에 String 
		getTime()이라 적힘 select는 resultType에 반환받을 타입을 *반드시* 적야야 합니다. ★★★★★ 타입의 종ㄹ - 
		string, int, double, array, dto 등이 있습니다. -->
	<select id="getTime" resultType="string">
		<!-- 실행시킬 sql문 작성 -->
		SELECT SYSDATE FROM DUAL
	</select>
	<!-- 파라미터 값이 있으면, 이 파라미터에 대한 타입을 지정(반드시 필수x) ?는 #{}로 바뀝니다. 파라미터의 이름은 getter명을 
		따라갑니다. -->
	<insert id="regist"
		parameterType="com.myweb.board.model.BoardDTO">
		INSERT INTO BOARD(bno, email, title, content, regdate)
		VALUES(board_seq.nextval,#{email},#{title},#{content},#{regdate})
	</insert>
	<select id="getList" resultType="com.myweb.board.model.BoardDTO">
		SELECT * FROM BOARD ORDER BY BNO
		DESC
	</select>
	<!-- parameterType="String" -->
	<select id="getContent"
		resultType="com.myweb.board.model.BoardDTO">
		SELECT *
		FROM (
		    SELECT B.*,
		           LAG(BNO, 1, 0) OVER(ORDER BY BNO) AS PREV_NO,
		           LAG(TITLE, 1, '이전글이 없습니다') OVER(ORDER BY BNO) AS PREV_TITLE,
		           LEAD(BNO, 1, 0) OVER(ORDER BY BNO) AS NEXT_NO,
		           LEAD(TITLE, 1, '다음글이 없습니다') OVER(ORDER BY BNO) AS NEXT_TITLE
		    FROM BOARD B
		)
		WHERE BNO = #{bno}

	</select>
	<update id="update" parameterType="map">
		UPDATE BOARD SET TITLE =
		#{title}, CONTENT = #{content} WHERE BNO = #{bno}
	</update>
	<delete id="delete">
		DELETE FROM BOARD WHERE BNO = #{bno}
	</delete>
</mapper>